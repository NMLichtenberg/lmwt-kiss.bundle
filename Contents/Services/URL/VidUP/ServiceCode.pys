# VidUP
#
####################################################################################################
def NormalizeURL(url):

	if not '/embed-' in url:
		return 'http://vidup.me/embed-%s.html' % (url.split('vidup.me/')[-1].split('.html')[0])
	else:
		return url

####################################################################################################
def MetadataObjectForURL(url):

	page = HTTP.Request(url, cacheTime=30).content

	title = Regex("title: '([^']+)'").search(page).group(1)
	thumb = Regex("image : '([^']+)'").search(page).group(1)

	return VideoClipObject(
		title = title,
		thumb = thumb
	)

####################################################################################################
def MediaObjectsForURL(url):

	return [
		MediaObject(
			video_resolution = 'sd',
			audio_channels = 2,
			optimized_for_streaming = False,
			parts = [
				PartObject(key=Callback(PlayVideo, url=url))
			]
		)
	]

####################################################################################################
@indirect
def PlayVideo(url):

	page = HTTP.Request(url, cacheTime=30).content

	video_url = Regex('"file":"([^"]+\.mp4)"').findall(page)

	return IndirectResponse(VideoClipObject, key=video_url[-1])
